
PET_START:
  JMP INIT_PET

; Constants
STARTING_HP = $64
MAX_HP = $64
HAPPINESS_THRESHOLD = $32
HUNGER_THRESHOLD = $32
MAX_NAME_LENGTH = $0A

; Variables
CURRENT_HP = $02
HAPPINESS = $03
HUNGER = $04
PET_NAME = $05

; Functions
INIT_PET:
  LDX #STARTING_HP
  STX CURRENT_HP
  
  LDX #$00
  STX HAPPINESS
  
  LDX #$00
  STX HUNGER
  
  JSR INPUT_NAME
  
  JSR MAIN_LOOP

MAIN_LOOP:
  JSR DISPLAY_STATUS
  JSR CHECK_STATUS
  
  LDA CURRENT_HP
  BEQ GAME_OVER
  
  JSR GET_USER_INPUT
  
  JMP MAIN_LOOP

DISPLAY_STATUS:
  LDA CURRENT_HP
  JSR PRINT_DECIMAL
  
  LDA HAPPINESS
  JSR PRINT_DECIMAL
  
  LDA HUNGER
  JSR PRINT_DECIMAL

  RTS

CHECK_STATUS:
  LDA HAPPINESS
  CMP #HAPPINESS_THRESHOLD
  BCS DECREASE_HP
  
  LDA HUNGER
  CMP #HUNGER_THRESHOLD
  BCS DECREASE_HP
  
  INC HAPPINESS
  INC HUNGER
  
  RTS

DECREASE_HP:
  DEC CURRENT_HP
  RTS

GET_USER_INPUT:
  JSR PRINT_MESSAGE
  
  LDA #$FF
  STA $FF00 ; Get user input
  
  CMP #0D ; Check if user pressed Enter
  BEQ DONE
  
  RTS
  
DONE:
  RTS

INPUT_NAME:
  LDX #$00
  STX PET_NAME
  
LOOP_NAME:
  LDA #$FF
  STA $FF00 ; Get user input for name
  
  CMP #0D ; Check if user pressed Enter
  BEQ DONE_NAME
  
  STA PET_NAME,X
  
  INX
  CPX #MAX_NAME_LENGTH
  BNE LOOP_NAME
  
  RTS
  
DONE_NAME:
  RTS

PRINT_DECIMAL:
  PHA
  
  LSR
  LSR
  LSR
  LSR
  JSR PRINT_DIGIT

  PLA
  LSR
  LSR
  LSR
  JSR PRINT_DIGIT

  PLA
  LSR
  LSR
  JSR PRINT_DIGIT

  PLA
  LSR
  JSR PRINT_DIGIT
  
  RTS

PRINT_DIGIT:
  AND #$0F
  ORA #$30
  JSR PRINT_CHAR
  
  RTS

PRINT_CHAR:
  STA $D020 ; Print character on screen
  RTS

PRINT_MESSAGE:
  LDX #0
  
LOOP_MESSAGE:
  LDA MESSAGE,X
  BEQ DONE_MESSAGE
  
  JSR PRINT_CHAR
  
  INX
  JMP LOOP_MESSAGE

DONE_MESSAGE:
  RTS

MESSAGE:
  .TEXT "HP: "
  .BYTE 0D,0A
  .TEXT "Happiness: "
  .BYTE 0D,0A
  .TEXT "Hunger: "
  .BYTE 0D,0A
  .TEXT "Enter a command:"
  .BYTE 00

GAME_OVER:
  LDX #0
  STX CURRENT_HP
  
  JSR PRINT_MESSAGE
  
  RTS
