
; Hangman game in 6502 assembly

ORG $0200

START:
    LDA #MSG_START
    JSR PRINT_STRING

    LDX #WORD
    LDY #BLANKS
    JSR GET_WORD

    LDY #0        ; initialize wrong guesses counter

LOOP:
    JSR PRINT_BLANKS
    JSR PRINT_GUESSES

    JSR GET_GUESS

    JSR CHECK_GUESS
    BEQ WIN

    JSR INC_WRONG_GUESSES
    CMP #MAX_WRONG_GUESSES
    BCC LOOP

LOSE:
    LDA #MSG_LOSE
    JSR PRINT_STRING
    JMP END

WIN:
    LDA #MSG_WIN
    JSR PRINT_STRING

END:
    BRK

MSG_START: .ASCIIZ "Welcome to Hangman!\n"
MSG_LOSE:  .ASCIIZ "You lose. The word was: "
MSG_WIN:   .ASCIIZ "Congratulations! You win!\n"

WORD:   .BYTE "EXAMPLE", $00
BLANKS: .BYTE "_______", $00
GUESSES: .BYTE "", $00

MAX_WRONG_GUESSES = 5

GET_WORD:
    LDA (X),Y
    STA BLANKS,Y
    INY
    CMP #0
    BNE GET_WORD
    RTS

PRINT_BLANKS:
    LDA #BLANKS
    JSR PRINT_STRING
    RTS

PRINT_GUESSES:
    LDA #GUESSES
    JSR PRINT_STRING
    RTS

GET_GUESS:
    LDA #GUESSES
    JSR PRINT_STRING

    LDA #0
    JSR INPUT
    STA (GUESSES),Y
    INY
    RTS

CHECK_GUESS:
    LDX #0
COMPARE:
    LDA (GUESSES),X
    BEQ DONE

    LDY #0
COMPARE_WORD:
    LDA BLANKS,Y
    CMP (GUESSES),X
    BEQ NEXT_GUESS

    INY
    LDA BLANKS,Y
    CMP #0
    BNE COMPARE_WORD

NEXT_GUESS:
    INX
    CPX #7
    BCC COMPARE

    RTS

DONE:
    LDA #1
    RTS

INC_WRONG_GUESSES:
    INC  WRONG_GUESSES
    RTS

PRINT_STRING:
    LDX #0
PRINT_LOOP:
    LDA (X)
    BEQ PRINT_END
    JSR PRINT_CHAR
    INX
    JMP PRINT_LOOP

PRINT_CHAR:
    JSR $FDED
    RTS

PRINT_END:
    LDA #10
    JSR PRINT_CHAR
    RTS

INPUT:
    LDA #$FF
    STA $FC
    LDA #$00
    STA $FB
    JSR $FD8F
    LDA $FC
    RTS

WRONG_GUESSES: .BYTE 0

