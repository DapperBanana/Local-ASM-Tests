
.INCLUDE "6502.h"

; Constants
BUFFER_SIZE = 100
MAX_ITEMS = 10

; Variables
.buffer: .BLOCK BUFFER_SIZE
inventory: .BLOCK MAX_ITEMS

START:
  LDX #0
  LDY #0
  JSR PRINT_MENU

LOOP:
  JSR GET_INPUT
  CMP #'1'
  BEQ ADD_ITEM
  CMP #'2'
  BEQ REMOVE_ITEM
  CMP #'3'
  BEQ SHOW_INVENTORY
  BNE INVALID_INPUT
  BRA LOOP

ADD_ITEM:
  LDA #'Enter item name: '
  JSR PRINT_STRING
  JSR GET_INPUT
  STA .buffer, X
  LDA #'Item added.'
  JSR PRINT_STRING
  INX
  BRA LOOP

REMOVE_ITEM:
  LDA #'Enter item number to remove: '
  JSR PRINT_STRING
  JSR GET_INPUT
  CLC
  ADC #-48
  LDX A
  LDA #'Item removed.'
  JSR PRINT_STRING
  BRA LOOP

SHOW_INVENTORY:
  LDA #'Inventory:'
  JSR PRINT_STRING
  LDX #0
PRINT_LOOP:
  LDY inventory, X
  BEQ DONE_PRINT
  JSR PRINT_NEWLINE
  LDA inventory, Y
  JSR PRINT_CHAR
  INY
  BRA PRINT_LOOP
DONE_PRINT:
  BRA LOOP

INVALID_INPUT:
  LDA #'Invalid input.'
  JSR PRINT_STRING
  BRA LOOP

PRINT_MENU:
  LDA #'1. Add Item'
  JSR PRINT_STRING
  JSR PRINT_NEWLINE
  LDA #'2. Remove Item'
  JSR PRINT_STRING
  JSR PRINT_NEWLINE
  LDA #'3. Show Inventory'
  JSR PRINT_STRING
  JSR PRINT_NEWLINE
  RTS

PRINT_STRING:
  STA STROBE
  LDX #0
PRINT_CHAR_LOOP:
  LDA .buffer, X
  BEQ DONE_PRINT_CHAR
  JSR PRINT_CHAR
  INX
  BRA PRINT_CHAR_LOOP
DONE_PRINT_CHAR:
  RTS

PRINT_CHAR:
  STA STROBE
  RTS

PRINT_NEWLINE:
  LDA #13
  JSR PRINT_CHAR
  LDA #10
  JSR PRINT_CHAR
  RTS

GET_INPUT:
  LDA #0
GET_INPUT_LOOP:
  JSR GET_CHAR
  CMP #13
  BEQ DONE_GET_INPUT
  STA .buffer, X
  INX
  BRA GET_INPUT_LOOP
DONE_GET_INPUT:
  RTS

GET_CHAR:
  LDA #15
  STA STROBE
GET_CHAR_LOOP:
  BIT PORTB
  BPL GET_CHAR_LOOP
  LDA PORTA
  RTS

.END
